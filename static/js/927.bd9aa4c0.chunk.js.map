{"version":3,"file":"static/js/927.bd9aa4c0.chunk.js","mappings":"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","sources":["components/button/button.component.jsx","components/button/button.styles.jsx","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-up-form/sign-up-form.styles.jsx","components/sign-up-form/sign-up-form.component.jsx","components/sign-in-form/sign-in-form.styles.jsx","components/sign-in-form/sign-in-form.component.jsx","routes/authentication/authentication.styles.jsx","routes/authentication/authentication.component.jsx"],"sourcesContent":["import {\r\n  BaseButton,\r\n  GoogleSignInButton,\r\n  InvertedButton,\r\n  DetailsButton,\r\n  ButtonSpinner,\r\n} from \"./button.styles\";\r\n\r\nexport const BUTTON_TYPE_CLASSES = {\r\n  base: \"base\",\r\n  google: \"google-sign-in\",\r\n  inverted: \"inverted\",\r\n  details: \"details\",\r\n};\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>\r\n  ({\r\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\r\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n    [BUTTON_TYPE_CLASSES.details]: DetailsButton,\r\n  }[buttonType]);\r\n\r\nconst Button = ({ children, buttonType, isLoading, ...otherProps }) => {\r\n  const CustomButton = getButton(buttonType);\r\n  return (\r\n    <CustomButton disabled={isLoading} {...otherProps}>\r\n      {isLoading ? <ButtonSpinner /> : children}\r\n    </CustomButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport { SpinnerContainer } from \"../spinner/spinner.styles\";\r\n\r\nexport const BaseButton = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 15px;\r\n  background-color: black;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-family: \"Open Sans Condensed\";\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    min-width: unset;\r\n    padding: 0 15px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const GoogleSignInButton = styled(BaseButton)`\r\n  background-color: #4285f4;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const InvertedButton = styled(BaseButton)`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const DetailsButton = styled(BaseButton)`\r\n  background-color: white;\r\n  color: white;\r\n  border: none;\r\n  padding: 0px;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nexport const ButtonSpinner = styled(SpinnerContainer)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst subColor = \"grey\";\r\nconst mainColor = \"black\";\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  ${({ shrink }) => shrink && shrinkLabelStyles};\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ ${FormInputLabel} {\r\n    ${shrinkLabelStyles};\r\n  }\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n\r\n  input[type=\"password\"] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n","import { FormInputLabel, Input, Group } from \"./form-input.styles\";\r\n\r\nconst FormInput = ({ label, ...otherProps }) => {\r\n  return (\r\n    <Group>\r\n      <Input {...otherProps} />\r\n      {label && (\r\n        <FormInputLabel shrink={otherProps.value.length}>\r\n          {label}\r\n        </FormInputLabel>\r\n      )}\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n\r\n  h2 {\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 80vw;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport Button from \"../button/button.component\";\r\nimport {\r\n  createAuthUserWithEmailAndPassword,\r\n  createUserDocumentFromAuth,\r\n} from \"../../utils/firebase/firebase.utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SignUpContainer } from \"./sign-up-form.styles\";\r\n\r\nconst defaultFormFields = {\r\n  displayName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst SignUpForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { displayName, email, password, confirmPassword } = formFields;\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"passwords do not match\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 3900,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        style: {\r\n          fontFamily: \"Arial\",\r\n          fontSize: \"15px\",\r\n          fontWeight: \"bold\",\r\n          color: \"red\",\r\n          borderRadius: \"5px\",\r\n          padding: \"10px\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { user } = await createAuthUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      await createUserDocumentFromAuth(user, { displayName });\r\n      resetFormFields();\r\n      toast.success(\"Signed Up Successfully !\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 3900,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        style: {\r\n          fontFamily: \"Arial\",\r\n          fontSize: \"16px\",\r\n          fontWeight: \"bold\",\r\n          color: \"#4CAF50\",\r\n          borderRadius: \"5px\",\r\n          paddingLeft: \"10px\",\r\n        },\r\n      });\r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        toast.error(\"Cannot create user, email already in use\", {\r\n          position: \"bottom-left\",\r\n          autoClose: 3900,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          style: {\r\n            fontFamily: \"Arial\",\r\n            fontSize: \"15px\",\r\n            fontWeight: \"bold\",\r\n            color: \"red\",\r\n            borderRadius: \"5px\",\r\n            padding: \"10px\",\r\n          },\r\n        });\r\n      } else {\r\n        toast.error(\"user creation encountered an error\", {\r\n          position: \"bottom-left\",\r\n          autoClose: 3900,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          style: {\r\n            fontFamily: \"Arial\",\r\n            fontSize: \"15px\",\r\n            fontWeight: \"bold\",\r\n            color: \"red\",\r\n            borderRadius: \"5px\",\r\n            padding: \"10px\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <h2>Don't have an account?</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label=\"Display Name\"\r\n          type=\"text\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"displayName\"\r\n          value={displayName}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          value={password}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n        />\r\n        <Button type=\"submit\">Sign Up</Button>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n\r\n  h2 {\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 80vw;\r\n    padding-bottom: 20px;\r\n    border-bottom: 5px solid darkgrey;\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","/* eslint-disable */\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  signInAuthUserWithEmailAndPassword,\r\n  signInWithGooglePopup,\r\n} from \"../../utils/firebase/firebase.utils\";\r\n\r\nimport { SignInContainer, ButtonsContainer } from \"./sign-in-form.styles\";\r\n\r\nconst defaultFormFields = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst SignInForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password } = formFields;\r\n  const navigate = useNavigate();\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    await signInWithGooglePopup();\r\n    toast.success(\"logged in successfully !\", {\r\n      position: \"bottom-left\",\r\n      autoClose: 3900,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      style: {\r\n        fontFamily: \"Arial\",\r\n        fontSize: \"17px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#4CAF50\",\r\n        borderRadius: \"5px\",\r\n        paddingLeft: \"10px\",\r\n      },\r\n    });\r\n\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await signInAuthUserWithEmailAndPassword(email, password);\r\n      resetFormFields();\r\n      toast.success(\"Signed in Successfully !\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 3900,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        style: {\r\n          fontFamily: \"Arial\",\r\n          fontSize: \"16px\",\r\n          fontWeight: \"bold\",\r\n          color: \"#4CAF50\",\r\n          borderRadius: \"5px\",\r\n          paddingLeft: \"10px\",\r\n        },\r\n      });\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      toast.error(`${error.code}`, {\r\n        position: \"bottom-left\",\r\n        autoClose: 3900,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        style: {\r\n          fontFamily: \"Arial\",\r\n          fontSize: \"15px\",\r\n          fontWeight: \"bold\",\r\n          color: \"red\",\r\n          borderRadius: \"5px\",\r\n          padding: \"10px\",\r\n        },\r\n      });\r\n      console.log(\"user sign in failed\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <h2>Already have an account?</h2>\r\n      <span>Sign in with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          value={password}\r\n        />\r\n        <ButtonsContainer>\r\n          <Button type=\"submit\">Sign In</Button>\r\n          <Button\r\n            buttonType={BUTTON_TYPE_CLASSES.google}\r\n            type=\"button\"\r\n            onClick={signInWithGoogle}\r\n          >\r\n            Google Sign In\r\n          </Button>\r\n        </ButtonsContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthenticationContainer = styled.div`\r\n  display: flex;\r\n  width: 900px;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column; /* Change to vertical layout */\r\n    width: 100%;\r\n    margin: unset;\r\n  }\r\n`;\r\n","import SignUpForm from \"../../components/sign-up-form/sign-up-form.component\";\r\nimport SignInForm from \"../../components/sign-in-form/sign-in-form.component\";\r\nimport { AuthenticationContainer } from \"./authentication.styles\";\r\n\r\nconst Authentication = () => {\r\n  return (\r\n    <AuthenticationContainer>\r\n      <SignInForm />\r\n      <SignUpForm />\r\n    </AuthenticationContainer>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n"],"names":["BUTTON_TYPE_CLASSES","base","google","inverted","details","children","buttonType","isLoading","otherProps","CustomButton","BaseButton","GoogleSignInButton","InvertedButton","DetailsButton","getButton","disabled","styled","ButtonSpinner","SpinnerContainer","subColor","shrinkLabelStyles","css","FormInputLabel","shrink","Input","Group","label","value","length","SignUpContainer","defaultFormFields","displayName","email","password","confirmPassword","useState","formFields","setFormFields","handleSubmit","event","preventDefault","toast","position","autoClose","closeOnClick","pauseOnHover","draggable","style","fontFamily","fontSize","fontWeight","color","borderRadius","padding","createAuthUserWithEmailAndPassword","user","createUserDocumentFromAuth","paddingLeft","code","handleChange","target","name","onSubmit","type","required","onChange","SignInContainer","ButtonsContainer","navigate","useNavigate","signInWithGoogle","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","console","log","onClick","AuthenticationContainer"],"sourceRoot":""}